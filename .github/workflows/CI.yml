name: CI

on:
  push:
    tags:
      - '**'
    branches:
      - main
      - master
  pull_request:

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: messense/maturin-action@v1
        with:
          manylinux: auto
          command: build
#          args: --release --sdist -o dist --find-interpreter
          args: --release --sdist -o dist --interpreter 3.10
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

#  windows:
#    runs-on: windows-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: messense/maturin-action@v1
#        with:
#          command: build
#          args: --release -o dist --find-interpreter
#      - name: Upload wheels
#        uses: actions/upload-artifact@v2
#        with:
#          name: wheels
#          path: dist
#
#  macos:
#    runs-on: macos-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: messense/maturin-action@v1
#        with:
#          command: build
#          args: --release -o dist --universal2 --find-interpreter
#      - name: Upload wheels
#        uses: actions/upload-artifact@v2
#        with:
#          name: wheels
#          path: dist

  test:
#    needs: [ macos, windows, linux ]
    needs: [ linux ]
    strategy:
      fail-fast: false
      matrix:
#        os: [ ubuntu-20.04, macos-11, windows-2019 ]
        os: [ ubuntu-20.04 ]
#        python-version: ["3.9", "3.10", "3.11"]
        python-version: ["3.10"]

    name: Test on ${{ matrix.os}} ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: wheels
      - name: Display structure of downloaded files
        run: ls -R
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

          pip install --no-index --no-deps --find-links wheels/ serpyco-rs
          pip install --find-links wheels/ serpyco-rs

      - name: Test with pytest
        run: |
          pytest -vss

  fmt:
    name: Rustfmt
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - run: cargo fmt --all -- --check

    clippy:
      name: Clippy
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
          with:
            submodules: true
        - uses: actions-rs/toolchain@v1
          with:
            profile: minimal
            toolchain: stable
            override: true
            components: clippy
        - run: cargo clippy --all-targets --all-features -- -D warnings

  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.event.ref, 'refs/tags')
    needs: [ linux, test ]
#    needs: [ macos, windows, linux, test ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
